# SPDX-License-Identifier: BSD-2-Clause
# Copyright  (c) 2020-2023, The Chancellor, Masters and Scholars of the University
# of Oxford, and the 'Galv' Developers. All rights reserved.

"""
Django settings for backend_django project.

Generated by 'django-admin startproject' using Django 4.1.3.

For more information on this path, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import os  # noqa: F401
import dj_database_url

from .settings_base import *  # noqa: F401, F403, E402

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY", "django-insecure-dev-key")

ALLOWED_HOSTS = [*ALLOWED_HOSTS, "localhost", "host.docker.internal"]  # noqa: F405

CSRF_TRUSTED_ORIGINS = CORS_ALLOWED_ORIGINS  # noqa: F405

# for django-debug-toolbar
DEBUG_TOOLBAR_CONFIG = {
    "SHOW_TOOLBAR_CALLBACK": lambda request: DEBUG,
    "DEBUG_TOOLBAR_PANELS": [
        "cachalot.panels.CachalotPanel",
    ],
}

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

# First port of call is the DATABASE_URL environment variable
# This means we can support fly.io's postgresql service

if os.environ.get("DATABASE_URL"):
    DATABASES = {"default": dj_database_url.config(test_options={"NAME": "galv_test"})}
else:
    DATABASES = {
        "default": {
            "ENGINE": "django.db.backends.postgresql",
            "NAME": os.environ.get("POSTGRES_DB", "galv"),
            "HOST": os.environ.get("POSTGRES_HOST", "postgres"),
            "PORT": os.environ.get("POSTGRES_PORT", 5432),
            "USER": os.environ.get("POSTGRES_USER", "postgres"),
            "PASSWORD": os.environ.get("POSTGRES_PASSWORD", "postgres"),
            "TEST": {"NAME": "galv_test"},
        }
    }

# CACHES = {
#     "default": {
#         "BACKEND": "django.core.cache.backends.locmem.LocMemCache",
#         "LOCATION": "unique-snowflake",
#     }
# }
